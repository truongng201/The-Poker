name: Project Beta CI/CD servers pipeline

on:
  push:
    branches:
      - main

jobs:
  check_folder_server_changed:
    name: Check if server folder changed
    runs-on: ubuntu-latest
    outputs:
      is_changed: ${{ steps.changes.outputs.server }}

    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            server:
              - 'server/**'

      # run only if "server" files were changed
      - name: server is changed
        if: steps.changes.outputs.server == 'true'
        run: echo "Folder server has changed"

      # run only if "server" files were not changed
      - name: server is not changed
        if: steps.changes.outputs.server == 'false'
        run: echo "Folder server has not changed"

#   build_and_push:
#     name: Build and Push Server Docker Image
#     runs-on: ubuntu-latest
#     needs: [check_folder_server_changed]
#     if: needs.check_folder_server_changed.outputs.is_changed == 'true'
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up server config
#         run: |
#           cd server/pkg/config
#           echo "${{ secrets.SERVER_CONFIG_FILE }}" > config.yml

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Build Server Docker image
#         run: docker build -t ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY}}-server:latest . --target production

#       - name: Push Server Docker image to Docker Hub
#         run: docker push ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY}}-server:latest

#   pull_and_run_on_droplet:
#     needs: [build_and_push]
#     name: Pull and Run Docker Image on Droplet
#     runs-on: ubuntu-latest

#     steps:
#       - name: Install SSH key
#         run: |
#           mkdir -p ~/.ssh/
#           cd ~/.ssh/ 
#           touch id_rsa && touch known_hosts && chmod 600 id_rsa
#           echo "${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa

#       - name: Add Droplet to known hosts
#         run: ssh-keyscan ${{ secrets.SERVER_IP_ADDRESS}} >> ~/.ssh/known_hosts

#       - name: Pull and run Docker images on Droplet
#         run: |
#           ssh ${{ secrets.SERVER_USER}}@${{ secrets.SERVER_IP_ADDRESS}} 'docker pull ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY}}-server:latest'
#           ssh ${{ secrets.SERVER_USER}}@${{ secrets.SERVER_IP_ADDRESS}} 'docker-compose up --build -d --force-recreate --remove-orphans server'
