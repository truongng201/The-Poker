// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: signin.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT 
    id,
    user_id,
    email,
    username,
    image_url,
    is_verified,
    hashed_password
FROM users
WHERE email = $1
`

type GetUserByEmailRow struct {
	ID             int64       `json:"id"`
	UserID         string      `json:"user_id"`
	Email          string      `json:"email"`
	Username       string      `json:"username"`
	ImageUrl       pgtype.Text `json:"image_url"`
	IsVerified     bool        `json:"is_verified"`
	HashedPassword string      `json:"hashed_password"`
}

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error) {
	row := q.db.QueryRow(ctx, getUserByEmail, email)
	var i GetUserByEmailRow
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Email,
		&i.Username,
		&i.ImageUrl,
		&i.IsVerified,
		&i.HashedPassword,
	)
	return i, err
}
